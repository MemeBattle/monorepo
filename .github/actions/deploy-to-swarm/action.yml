name: "Deploy to swarm"
description: "Call deploy to swarm lambda with a stack"
inputs:
  path-to-stack:
    required: true
    description: "Path to swarm stack file (docker compose v3)"
  name:
    required: true
    description: "Stack name"
  sa_auth_key:
    required: true
    description: "https://cloud.yandex.ru/en/docs/iam/concepts/authorization/key"
  docker_registry_login:
    required: false
    default: ''
    description: 'Docker login'
  docker_registry_password:
    required: false
    default: ''
    description: 'Docker password'
  docker_registry:
    required: false
    default: ''
    description: 'Docker registry'

runs:
  using: "composite"
  steps:
    - name: Install yc cli
      shell: bash
      id: install_yc_cli
      run: curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -i /opt/yandex-cloud -n && ln -s /opt/yandex-cloud/bin/yc /usr/local/bin/yc

    - name: Configure yc cli
      id: configure_yc_cli
      shell: bash
      run: |
        yc config profile create worker
        echo "${{ inputs.sa_auth_key }}" | base64 -d > key.json
        yc config set service-account-key key.json

    - name: Read stack file
      id: package
      uses: juliangruber/read-file-action@v1
      with:
        path: ${{ inputs.path-to-stack }}

    - name: Invoke deploy to swarm lambda
      id: invoke-lambda
      shell: bash
      run: |
        yc serverless function invoke deploy-stack-lambda -d '{ "body": {"name": "${{ inputs.name }}", "stack": ${{ toJSON(steps.package.outputs.content) }}, "dockerLogin": ${{ toJSON(inputs.docker_registry_login) }}, "dockerPassword": ${{ toJSON(inputs.docker_registry_password) }}, "dockerRegistry": ${{ toJSON(inputs.docker_registry) }} } }'
