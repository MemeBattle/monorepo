name: 'Build, push and deploy docker images'

on:
  push:
    branches: [ master ]
    paths:
      - 'apps/gamehub-client/**'
      - '.deploy/gamehub.deploy.yml'
      - '.docker/GameHub-client_Dockerfile*'

jobs:

  gamehub-client-image:
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: env.BUILDKIT_STEP_LOG_MAX_SIZE=10485760

      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/memebattle/gamehub-client:${{ github.sha }}
            ghcr.io/memebattle/gamehub-client:latest
          build-args:
            NPM_TOKEN=${{ secrets.CI_REGISTRY_TOKEN }}
          context: '.'
          file: '.docker/GameHub-client_Dockerfile'
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: [gamehub-client-image]
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - name: Remove ssh sock
        run: rm /tmp/ssh-auth.sock || echo "/tmp/ssh-auth.sock doesn't exists"

      - name: Setup SSH
        uses: kielabokkie/ssh-key-and-known-hosts-action@v1.1.0
        with:
          ssh-private-key: ${{ secrets.AWS_CI_PRIVATE_KEY }}
          ssh-host: mems.fun

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: create docker context
        run: |
          docker context rm remote || echo "context doesn't exists"
          docker context create remote --docker "host=ssh://ci@mems.fun"

      - name: deploy stack
        run: |
          docker context use remote
          docker stack deploy --prune --with-registry-auth --resolve-image=always -c .deploy/gamehub.deploy.yml GameHub
