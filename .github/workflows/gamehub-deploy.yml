name: 'GameHub build, push and deploy'

on:
  workflow_dispatch:
    branches:
      - master
  push:
    branches: [ master ]
    paths:
      - 'apps/gamehub-client/**'
      - '.deploy/gamehub.deploy.yml'
      - '.docker/GameHub-client_Dockerfile*'
      - '.github/workflows/gamehub-deploy.yml'


jobs:

  build-gamehub-client-image:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: env.BUILDKIT_STEP_LOG_MAX_SIZE=10485760

      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            ghcr.io/memebattle/gamehub-client:${{ github.sha }}
            ghcr.io/memebattle/gamehub-client:latest
          context: '.'
          file: '.docker/GameHub-client_Dockerfile'
          cache-from: type=gha,scope=$GITHUB_REF_NAME-gamehub-client
          cache-to: type=gha,mode=max,scope=$GITHUB_REF_NAME-gamehub-client

  deploy:
    needs: [build-gamehub-client-image]

    runs-on: ubuntu-22.04

    environment:
      name: GameHub-production
      url: https://mems.fun

    steps:
      - uses: actions/checkout@main
        name: Checkout

      - uses: ./.github/actions/deploy-to-swarm
        name: Deploy to swarm lambda
        with:
          path-to-stack: '.deploy/gamehub.deploy.yml'
          name: 'GAMEHUB'
          yc_folder_id: ${{ vars.YC_FOLDER_ID }}
          sa_auth_key: ${{ secrets.YC_WORKER_KEY }}
          docker_registry_login: ${{ secrets.GHCR_USER }}
          docker_registry_password: ${{ secrets.GHCR_PULL_TOKEN }}
          docker_registry: 'ghcr.io'
