name: 'Build, push and deploy ligretto docker images'

on:
  push:
    branches: [ master, feature/193-ligretto-deploy ]
    paths-ignore:
      - 'apps/gamehub-client/**'
      - '.deploy'
      - '!.deploy/ligretto.deploy.yml'

jobs:

  ligretto-frontend-build:

    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install node
      uses: actions/setup-node@v3
      with:
        node-version: '16.14.2'
        cache: 'yarn'

    - name: Install yarn
      run: corepack enable

    - name: Auth npm
      run: |
        yarn config set -H npmScopes.memebattle.npmRegistryServer "https://npm.pkg.github.com"
        yarn config set -H npmScopes.memebattle.npmAuthToken "${{ secrets.GITHUB_TOKEN }}"

    - name: Install dependencies
      run: yarn

    - name: Build frontend
      run: yarn run ligretto:front:build
      env:
        LIGRETTO_GAMEPLAY_URL: https://api.ligretto.app
        LIGRETTO_CORE_URL: https://core.ligretto.app/api
        CAS_PARTNER_ID: 63b567bfd594b5085866649a
        CAS_STATIC_URL: https://cas.mems.fun/static
        CAS_URL: https://cas.mems.fun/api
        AMPLITUDE_TOKEN: f55f6d07422dfb26ca4dfbe59a54d609

    - name: Archive frontend production dist
      uses: actions/upload-artifact@v3
      with:
        name: frontend-dist
        path: |
          apps/ligretto-frontend/dist

  ligretto-gameplay-backend-image:

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: env.BUILDKIT_STEP_LOG_MAX_SIZE=10485760

      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/memebattle/ligretto-gameplay-backend:${{ github.sha }}
            ghcr.io/memebattle/ligretto-gameplay-backend:latest
          context: '.'
          file: '.docker/Ligretto-gameplay-backend_Dockerfile'
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args:
            NPM_TOKEN=${{ secrets.GITHUB_TOKEN }}

  ligretto-core-backend-image:

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: env.BUILDKIT_STEP_LOG_MAX_SIZE=10485760

      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/memebattle/ligretto-core-backend:${{ github.sha }}
            ghcr.io/memebattle/ligretto-core-backend:latest
          context: '.'
          file: '.docker/Ligretto-core-backend_Dockerfile'
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args:
            NPM_TOKEN=${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: [ligretto-gameplay-backend-image, ligretto-core-backend-image]

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        name: Checkout

      - uses: ./.github/actions/deploy-to-swarm
        with:
          path-to-stack: '.deploy/ligretto.deploy.yml'
          name: 'LIGRETTO'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          docker_login: ${{ github.repository_owner }}
          docker_password: ${{ secrets.GITHUB_TOKEN }}
          docker_registry: 'ghcr.io'
