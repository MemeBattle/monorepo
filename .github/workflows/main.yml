name: 'Build, push and deploy docker images'

on:
  push:
    branches: [ master ]

jobs:

  prepare-common:

    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install node
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install yarn
      run: npm install --global yarn

    - name: Auth npm
      run: |
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.CI_REGISTRY_TOKEN }}" >> .npmrc
        echo "@memebattle:registry=https://npm.pkg.github.com" >> .npmrc

    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: |
          node_modules
          ./apps/*/node_modules
          ./packages/*/node_modules
        key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

    - name: Install dependecies
      run: yarn

    - name: Build common-packages
      run: yarn run common-packages:build

    - name: Upload common packages
      uses: actions/upload-artifact@v2
      with:
        name: packages-builds
        path: |
          packages/*/dist
          packages/*/build
          apps/auth-front/dist


  ligretto-frontend-image:

    needs: prepare-common

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v2

    - name: Install node
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install yarn
      run: npm install --global yarn

    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: |
          node_modules
          ./apps/*/node_modules
          ./packages/*/node_modules
        key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

    - name: Install dependecies
      run: yarn

    - name: Download common packages
      uses: actions/download-artifact@v2
      with:
        name: packages-builds

    - name: Build frontend
      run: yarn run ligretto:front:build
      env:
        SKIP_PREFLIGHT_CHECK: true
        REACT_APP_WEBSOCKET_HOST: https://api.ligretto.app
        REACT_APP_LIGRETTO_CORE_URL: https://core.ligretto.app
        REACT_APP_CAS_STATIC: https://cas.mems.fun/static
        REACT_APP_CAS_URL: https://cas.mems.fun/api

    - name: Docker login
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        platforms: linux/arm64
        push: true
        tags: |
          ghcr.io/memebattle/ligretto-frontend:${{github.sha}}
          ghcr.io/memebattle/ligretto-frontend:latest
        context: './apps/ligretto-recovery'

  ligretto-backend-image:

    needs: prepare-common

    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install yarn
        run: npm install --global yarn

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            ./apps/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install dependecies
        run: yarn

      - name: Download common packages
        uses: actions/download-artifact@v2
        with:
          name: packages-builds

      - name: Build backend
        run: yarn run ligretto:back:build

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/memebattle/ligretto-backend:${{ github.sha }}
            ghcr.io/memebattle/ligretto-backend:latest
          context: './apps/ligretto-backend'

  ligretto-core-image:

    needs: prepare-common

    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2

      - name: Auth npm
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.CI_REGISTRY_TOKEN }}" >> .npmrc
          echo "@memebattle:registry=https://npm.pkg.github.com" >> .npmrc

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install yarn
        run: npm install --global yarn

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            ./apps/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install dependecies
        run: yarn

      - name: Download common packages
        uses: actions/download-artifact@v2
        with:
          name: packages-builds

      - name: Build backend
        run: yarn run ligretto:core:build

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/memebattle/ligretto-core:${{ github.sha }}
            ghcr.io/memebattle/ligretto-core:latest
          context: './apps/ligretto-core'

      - name: Migrate database
        run: yarn run ligretto:core:migrate
        env:
          PORT: 3333
          HOST: 0.0.0.0
          NODE_ENV: production
          APP_KEY: BYnNsw-r-ndJTCy15Uqo8JAF4ONCA4X1
          PARTNER_ID: 61587c1bdc151b004107a2b5
          CAS_URI: https://cas.mems.fun/api
          DB_CONNECTION: pg
          PG_HOST: ${{ secrets.LIGRETTO_PG_HOST }}
          PG_PORT: 5432
          PG_USER: ${{ secrets.LIGRETTO_PG_USER }}
          PG_PASSWORD: ${{ secrets.LIGRETTO_PG_PASSWORD }}
          CAS_PUBLIC_KEY_PATH: /key.pem
          PG_DB_NAME: ligretto-core


  ligretto-ui-image:

    needs: prepare-common

    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install yarn
        run: npm install --global yarn

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            ./apps/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install dependecies
        run: yarn

      - name: Download common packages
        uses: actions/download-artifact@v2
        with:
          name: packages-builds

      - name: Build ligretto ui storybook
        run: yarn run ligretto:ui:build-storybook

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/memebattle/ligretto-ui:${{ github.sha }}
            ghcr.io/memebattle/ligretto-ui:latest
          context: './packages/ligretto-ui'

  deploy:
    needs: [ligretto-frontend-image, ligretto-ui-image, ligretto-backend-image, ligretto-core-image]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - name: Setup SSH
        uses: kielabokkie/ssh-key-and-known-hosts-action@v1.1.0
        with:
          ssh-private-key: ${{ secrets.AWS_CI_PRIVATE_KEY }}
          ssh-host: mems.fun

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: create docker context
        run: docker context create remote --docker "host=ssh://ci@mems.fun"

      - name: deploy stack
        run: |
          docker context use remote
          docker stack deploy --prune --with-registry-auth --resolve-image=always -c docker-compose.deploy.yml Ligretto
