@import 'src/assets/css/math.scss';

.teammate {
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: 18rem;
  height: 18rem;
}

.name {
  //align-self: flex-end;
  width: 100%;
  text-align: center;
  font-size: 1.8rem;
  font-weight: 600;
  color: #0d2f39;
  transform: translateY(-1rem);
  transition: transform 1s;
}

$photoRadius: 5;
$photoDiameter: $photoRadius * 2;

.photo {
  height: $photoDiameter + rem;
  width: $photoDiameter + rem;
  transition: box-shadow 1s;
  box-shadow: 0 0 1.5rem 0.3rem rgba(13, 47, 57, 0.19);
}

.photoWrapper {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: transform 1s;
  flex: 1;
}

$iconHeight: 1.5;

.icon {
  height: 100%;
}

.iconWrapper {
  position: absolute;
  top: calc(50% - #{$iconHeight / 2}rem);
  left: calc(50% - #{$iconHeight / 2}rem);
  height: $iconHeight + rem;
  transform: scale(0);
  transition: transform 1s;
}

.socialNetworks {
  position: absolute;
  top: 50%;
  left: 50%;
  opacity: 0;
  transform: rotate(-270deg);
  transition: all 1.3s;
}

$iconOffset: 1.2;

$maxSocials: 12;

$degByTotalCountMap: (
  1: 90,
  2: 90,
  3: 0,
  4: 45,
);

@function getDegByTotalCount($total) {
  @if map-has-key($degByTotalCountMap, $total) {
    @return map-get($degByTotalCountMap, $total);
  }
  @return 0;
}

@function calc-angle($current, $total) {
  @return ((360 / $total) * $current) + getDegByTotalCount($total);
}

@function calc-position-x($current, $total) {
  @return ($photoRadius + $iconOffset) * cos(calc-angle($current, $total) + 1deg);
}

@function calc-position-y($current, $total) {
  @return ($photoRadius + $iconOffset) * sin(calc-angle($current, $total) + 1deg);
}

.teammateInView,
.teammate:hover {
  .name {
    transform: translateY(0);
  }
  .socialNetworks {
    transform: rotate(0);
    opacity: 1;
  }

  .photoWrapper {
    transform: scale(1.1);

    .iconWrapper {
      @for $maxLength from 0 to $maxSocials {
        @for $index from 0 to $maxLength {
          &-#{$index}-#{$maxLength} {
            transform: scale(1) translate(#{calc-position-y($index, $maxLength)}rem, #{calc-position-x($index, $maxLength)}rem);
          }
        }
      }
    }
  }

  .photo {
    box-shadow: 0 0 2rem 1rem rgba(13, 47, 57, 0.19);
  }
}
