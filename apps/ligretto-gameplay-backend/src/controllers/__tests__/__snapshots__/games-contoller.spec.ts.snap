// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Games Controller createGame Should create relevant state on create game 1`] = `
Object {
  "games": Object {
    "1": Object {
      "config": Object {
        "dndEnabled": false,
        "playersMaxCount": 4,
        "startingDelayInSec": 4,
      },
      "id": "1",
      "name": "createGame",
      "players": Object {},
      "playground": Object {
        "decks": Array [],
        "droppedDecks": Array [],
      },
      "spectators": Object {},
      "status": "New",
    },
  },
  "users": Object {},
}
`;

exports[`Games Controller joinGame Should create relevant state on join room as first player 1`] = `
Object {
  "games": Object {
    "1": Object {
      "config": Object {
        "dndEnabled": false,
        "playersMaxCount": 4,
        "startingDelayInSec": 4,
      },
      "id": "1",
      "name": "createGame",
      "players": Object {
        "userId": Object {
          "cards": Array [],
          "id": "userId",
          "isHost": true,
          "ligrettoDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "stackDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "stackOpenDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "status": "DontReadyToPlay",
        },
      },
      "playground": Object {
        "decks": Array [],
        "droppedDecks": Array [],
      },
      "spectators": Object {},
      "status": "New",
    },
  },
  "users": Object {
    "userId": Object {
      "currentGameId": "1",
      "id": "userId",
      "socketIds": Array [
        "socketId",
      ],
    },
  },
}
`;

exports[`Games Controller joinGame Should create relevant state on join room by second connection 1`] = `
Object {
  "games": Object {
    "1": Object {
      "config": Object {
        "dndEnabled": false,
        "playersMaxCount": 4,
        "startingDelayInSec": 4,
      },
      "id": "1",
      "name": "createGame",
      "players": Object {
        "userId": Object {
          "cards": Array [],
          "id": "userId",
          "isHost": true,
          "ligrettoDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "stackDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "stackOpenDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "status": "DontReadyToPlay",
        },
      },
      "playground": Object {
        "decks": Array [],
        "droppedDecks": Array [],
      },
      "spectators": Object {},
      "status": "New",
    },
  },
  "users": Object {
    "userId": Object {
      "currentGameId": "1",
      "id": "userId",
      "socketIds": Array [
        "socketId",
        "socketId",
      ],
    },
  },
}
`;

exports[`Games Controller joinGame Should create relevant state on join room second player 1`] = `
Object {
  "games": Object {
    "1": Object {
      "config": Object {
        "dndEnabled": false,
        "playersMaxCount": 4,
        "startingDelayInSec": 4,
      },
      "id": "1",
      "name": "createGame",
      "players": Object {
        "secondUserId": Object {
          "cards": Array [],
          "id": "secondUserId",
          "isHost": false,
          "ligrettoDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "stackDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "stackOpenDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "status": "DontReadyToPlay",
        },
        "userId": Object {
          "cards": Array [],
          "id": "userId",
          "isHost": true,
          "ligrettoDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "stackDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "stackOpenDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "status": "DontReadyToPlay",
        },
      },
      "playground": Object {
        "decks": Array [],
        "droppedDecks": Array [],
      },
      "spectators": Object {},
      "status": "New",
    },
  },
  "users": Object {
    "secondUserId": Object {
      "currentGameId": "1",
      "id": "userId",
      "socketIds": Array [
        "secondUserSocketId",
      ],
    },
    "userId": Object {
      "currentGameId": "1",
      "id": "secondUserId",
      "socketIds": Array [
        "secondUserSocketId",
      ],
    },
  },
}
`;

exports[`Games Controller leaveFromRoomHandler Should create a relevant game state if one of two players leaved 1`] = `
Object {
  "games": Object {
    "1": Object {
      "config": Object {
        "dndEnabled": false,
        "playersMaxCount": 4,
        "startingDelayInSec": 4,
      },
      "id": "1",
      "name": "createGame",
      "players": Object {
        "userTwoId": Object {
          "cards": Array [],
          "id": "userTwoId",
          "isHost": true,
          "ligrettoDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "stackDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "stackOpenDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "status": "DontReadyToPlay",
        },
      },
      "playground": Object {
        "decks": Array [],
        "droppedDecks": Array [],
      },
      "spectators": Object {},
      "status": "Pause",
    },
  },
  "users": Object {
    "userOneId": Object {
      "currentGameId": "1",
      "id": "userOneId",
      "socketIds": Array [
        "socketId",
      ],
    },
    "userTwoId": Object {
      "currentGameId": "1",
      "id": "userTwoId",
      "socketIds": Array [
        "userTwoId",
      ],
    },
  },
}
`;

exports[`Games Controller leaveFromRoomHandler Should create a relevant state if last user disconnected 1`] = `
Object {
  "games": Object {},
  "users": Object {
    "userOneId": Object {
      "currentGameId": "1",
      "id": "userOneId",
      "socketIds": Array [
        "socketId",
      ],
    },
  },
}
`;

exports[`Games Controller leaveFromRoomHandler Should remove current socketId from user socket ids if user connected from few accounts 1`] = `
Object {
  "games": Object {
    "1": Object {
      "config": Object {
        "dndEnabled": false,
        "playersMaxCount": 4,
        "startingDelayInSec": 4,
      },
      "id": "1",
      "name": "createGame",
      "players": Object {
        "userOneId": Object {
          "cards": Array [],
          "id": "userOneId",
          "isHost": true,
          "ligrettoDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "stackDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "stackOpenDeck": Object {
            "cards": Array [],
            "isHidden": true,
          },
          "status": "DontReadyToPlay",
        },
      },
      "playground": Object {
        "decks": Array [],
        "droppedDecks": Array [],
      },
      "spectators": Object {},
      "status": "New",
    },
  },
  "users": Object {
    "userOneId": Object {
      "currentGameId": "1",
      "id": "userOneId",
      "socketIds": Array [
        "socket1",
        "socket2",
      ],
    },
  },
}
`;
